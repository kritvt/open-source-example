name: 'SonarCloud Scan'

on:
  workflow_run:
    workflows: ['Unit Test & Coverage']
    types:
      - completed
jobs:
  Process:
    if: github.event.workflow_run.conclusion != 'failure'
    runs-on: ubuntu-latest
    env:
      sonarProjectName: ${{ secrets.SONAR_PROJECT_KEY }}
      sonarProjectKey: ${{ secrets.SONAR_PROJECT_KEY }}
      sonarJavaBinaries: .
      sonarSource: .
      sonarInclusion: /src/main/**/*.java
      sonarExclusion: /*.zip,/*.jar,/*.html,/R.java,/build/,/target/,/.settings/,/.mvn/,/src/main/resources/static/bower_components/,/src/main/resources/static/jquery-validation/,/src/main/resources/static/scripts/material/,/src/main/resources/static/scripts/multiselect/,/src/main/resources/static/scripts/nanobar/,/src/main/resources/static/scripts/plugins/,/src/main/resources/static/scripts/utils/**
    steps:
    - name: Checkout (PR)
      if: github.event.workflow_run.event == 'pull_request'
      uses: actions/checkout@v2
      with:
        repository: ${{ github.event.workflow_run.head_repository.full_name }}
        ref: ${{ github.event.workflow_run.head_commit.id }}
        fetch-depth: 0
    - name: Checkout (Push)
      if: github.event.workflow_run.event == 'push'
      uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Extract Maven project version
      run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
      id: project
    - run: echo '${{ toJson(github) }}'
    - name: Prepare changelog
      run: |
        sed -i -e "s|<sonar.organization>\${env.SONAR_ORGANIZATION}</sonar.organization>|<sonar.organization>${{ secrets.SONAR_ORGANIZATION }}</sonar.organization>|g" pom.xml
    - name: Find PR
      if: github.event.workflow_run.event == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const prInfo = await github.rest.repos.listPullRequestsAssociatedWithCommit({
            commit_sha: "${{ github.event.workflow_run.head_commit.id }}",
            owner: "${{ github.event.workflow_run.head_commit.author.name }}",
            repo: "${{ github.event.workflow_run.head_repository.name }}"
          })
          const pr = prInfo.data[0]
          core.exportVariable('prBranch', pr.head.ref)
          core.exportVariable('prBase', pr.base.ref)
          core.exportVariable('prNumber', pr.number)
          core.exportVariable('prRepo', "${{ github.repository }}")
          core.exportVariable('endpoint', pr.api_url)
          core.exportVariable('sonarVersion', "${{ steps.project.outputs.version }}")
    - name: Build and analyze (PR)
      if: github.event.workflow_run.event == 'pull_request'
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.scm.revision=${{ github.event.workflow_run.head_commit.id }} -Dsonar.pullrequest.github.repository=${{ env.prRepo }} -Dsonar.pullrequest.github.endpoint=${{ env.endpoint }} -Dsonar.pullrequest.branch=${{ env.prBranch }} -Dsonar.pullrequest.base=${{ env.prBase }} -Dsonar.pullrequest.key=${{ env.prNumber }} -Dsonar.projectName=${{ env.sonarProjectName }} -Dsonar.projectKey=${{ env.sonarProjectName }} -Dsonar.version=${{ env.sonarVersion }} -Dsonar.java.binaries=${{ env.sonarJavaBinaries }} -Dsonar.sources=${{ env.sonarSource }} -Dsonar.inclusions=${{ env.sonarInclusion }} -Dsonar.exclusions=${{ env.sonarExclusion }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    - name: Build and analyze (Push)
      if: github.event.workflow_run.event == 'push'
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectName=${{ env.sonarProjectName }} -Dsonar.projectKey=${{ env.sonarProjectName }} -Dsonar.version=${{ env.sonarVersion }} -Dsonar.java.binaries=${{ env.sonarJavaBinaries }} -Dsonar.sources=${{ env.sonarSource }} -Dsonar.inclusions=${{ env.sonarInclusion }} -Dsonar.exclusions=${{ env.sonarExclusion }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}