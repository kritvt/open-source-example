name: 'Unit Test Reporter'

on:
  workflow_run:
    workflows: ['Unit Test & Coverage']
    types:
      - completed
jobs:
  Check:
    runs-on: ubuntu-latest
    outputs:
      isPR: ${{ steps.main_pr.outputs.valid }}
      isPush: ${{ steps.main_push.outputs.valid }}
    env:
      isPR: ${{ github.event.workflow_run.conclusion == 'failure' || github.event.workflow_run.event == 'pull_request' }}
      isPush: ${{ github.event.workflow_run.event == 'push' }}
    steps:
      - name: Check PR
        id: main_pr
        run: echo '::set-output name=valid::${{ env.isPR }}'
      - name: Check Push
        id: main_push
        run: echo '::set-output name=valid::${{ env.isPush }}'
  Create_Report:
    runs-on: ubuntu-latest
    needs: [Check]
    if: needs.Check.outputs.isPR == 'true' || needs.Check.outputs.isPush == 'true'
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        path: test-results
    - name: Create
      uses: EnricoMi/publish-unit-test-result-action@v1
      with:
        path: '*.xml'
  # Cleanup:
  #   runs-on: ubuntu-latest
  #   needs: [Check]
  #   if: always()
  #   steps:
  #   - uses: actions/github-script@v6
  #     if: needs.Check.outputs.isPush == 'true'
  #     with:
  #       script: |
  #         await github.rest.actions.deleteWorkflowRun({
  #           run_id: ${{ github.run_id }},
  #           owner: context.repo.owner,
  #           repo: context.repo.repo
  #         })